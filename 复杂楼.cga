/**
 * File:    复杂楼.cga
 * Created: 27 Apr 2020 17:34:27 GMT
 * Author:  李上言
 */

version "2019.1"

attr height = 100

attr Floor=10

attr Floor_Height=3

attr Groundfloor_Height=4

attr HighBuilding_Color="#6892d7"


#变量定义

Building_Height=Floor*Floor_Height

const Tile_Width=1.8

const FloorTop_Hight=0.1

const Frame_Width=0.11  # 调边框粗细


Lot-->
	
	[ extrude(height)
	A]
	[offset(-0.1,inside) 
	extrude(height)
	B]
	[offset(-3,inside) 
	extrude(height)
	C]
A-->
	split(y) { 10 : ground_foor | 9 : ground_foor| {6:FloorVolume}*|~1:tiao3}

################底座#####################

ground_foor-->
	 comp(f) {side:ground_Sides}
ground_Sides-->
	split(x) {~7*Tile_Width : GFloorTile }*


GFloorTile -->
	split(x) {'0.3: GFloorTile1| '0.4: GFloorTile1| '0.3:GFloorTile1}
GFloorTile1-->
	split(y) {'0.37: GFloorTile2| '0.63: GFloorTile2}
GFloorTile2-->
	offset(-Frame_Width)

	comp(f) {border : color(0.2,0.2,0.2) Frame. | inside : Glass}


################上面楼层#####################	 

#拆分出上面每个楼层的地面和侧面

FloorVolume-->
		
	 comp(f) {top : offset(-0.1, inside) FloorTop| side:FloorSides}


#楼层地面填充颜色

FloorTop --> 
	color(0.5,0.5,0.5)


#侧面生成玻璃窗户

FloorSides -->

	split(x) {~Tile_Width : FloorTile }*


FloorTile -->

	offset(-Frame_Width)

	comp(f) {border : color(0.2,0.2,0.2) Frame. | inside : Glass}

#制作玻璃反光效果

Glass -->

	color(HighBuilding_Color)
	
	set(material.opacity, 0.4)
	
	 #镜面反射
	
	 set(material.specular.r,0.6)
	
	 set(material.specular.g,0.6)
	
	set(material.specular.b,0.6)
	
	set(material.shininess,50)
	
	 #反射率
	
	set(material.reflectivity, 0.2)

################楼的横层#####################
	
B-->
	split(y) {0.1:dizuo | 9:NIL| 1.5:dizuo | 8.5:NIL| {0.5 : tiao|5 : louceng | 0.5 : tiao}*| ~1:tiao2}
louceng-->
	NIL
C-->
	color(1,1,1,0.5)
	
	
################屋顶#####################

tiao3-->
	comp(f) { top : roof  | side : side11}
roof-->
	offset(-1.5)//负号向上生成屋檐
     
      comp(f){ border : RoofEdge | inside : RoofFlat1 }     
RoofFlat1 -->
	//extrude(6)
	RoofFlat_satter
	RoofFlat
RoofFlat_satter-->
	offset(-5, inside)
	scatter(surface, 2, gaussian) { topcube }
topcube-->
	primitiveCube(5, 3, 4) 
RoofFlat-->	
      extrude(0.5)
      //setupProjection(0, scope.xy, '1, '1)
      //projectUV(0) 
      //texture("flatroof6.bw.jpg")     
RoofEdge --> 
		
      extrude(4)
      //color("#77ff77")
	